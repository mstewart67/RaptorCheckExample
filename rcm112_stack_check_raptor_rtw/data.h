/*****************************************************************************
   data.h
   Generated By:
   Raptor 2023b_1.0.0 (9999_9999)
   Matlab (R2023a) 9.14

   Copyright (c) 2024 New Eagle Products, Inc.
   All rights reserved.

   Code Generated at: Wed Mar 27 13:31:34 2024
 *****************************************************************************/

#ifndef __DATA_H
#define __DATA_H
#include "Std_Types.h"
#include "rtwtypes.h"
#include "raptor_types.h"

/*  SS_DOUBLE  =  0,    / real32_T    /
   SS_SINGLE  =  1,    / real32_T    /
   SS_INT8    =  2,    / int8_T      /
   SS_UINT8   =  3,    / uint8_T     /
   SS_INT16   =  4,    / int16_T     /
   SS_UINT16  =  5,    / uint16_T    /
   SS_INT32   =  6,    / int32_T     /
   SS_UINT32  =  7,    / uint32_T    /
   SS_BOOLEAN =  8     / boolean_T  */
/***** RAM Variables *************************************************/
#define RAMVARIABLES

typedef struct {
  uint8_T INIT_RAM_Variables;
  boolean_T rap_ds_FgndTasksStopped;   /* Type : boolean_T, Storage : RAM,  */
  boolean_T rap_ds_CANWakeIndicator;   /* Type : boolean_T, Storage : RAM,  */
  boolean_T rap_ds_EthWakeIndicator;   /* Type : boolean_T, Storage : RAM,  */
  boolean_T rap_ds_EthLinkStatus;      /* Type : boolean_T, Storage : RAM,  */
  boolean_T rap_ds_LINWakeIndicator;   /* Type : boolean_T, Storage : RAM,  */
  uint32_T rap_ds_Wake_CAN5_RxCount;   /* Type : uint32_T, Storage : RAM,  */
  uint32_T rap_ds_Wake_CAN5_SleepDelayTTmr;/* Type : uint32_T, Storage : RAM,  */
  uint32_T rap_ds_Wake_ETH_SleepDelayTTmr;/* Type : uint32_T, Storage : RAM,  */
  uint32_T rap_ds_Wake_LIN2_SleepDelayTTmr;/* Type : uint32_T, Storage : RAM,  */
  boolean_T rap_ds_KeySw_Bgnd;         /* Type : boolean_T, Storage : RAM,  */
  boolean_T rap_ds_KeepModuleOn;       /* Type : boolean_T, Storage : RAM,  */
  boolean_T rap_ds_MPRD_EN;            /* Type : boolean_T, Storage : RAM,  */
  uint16_T rap_ds_Wake_Source;         /* Type : uint16_T, Storage : RAM,  */
  real32_T rap_ds_Counter;             /* Type : real32_T, Storage : RAM,  */
  uint32_T rap_ds_EcuAddr_RAM;         /* Type : uint32_T, Storage : RAM,  */
  uint32_T rap_ds_UDSServerAddr_RAM;   /* Type : uint32_T, Storage : RAM,  */
  uint32_T rap_ds_UDSClientAddr_RAM;   /* Type : uint32_T, Storage : RAM,  */
  uint8_T rap_ds_EEPROM_State;         /* Type : uint8_T, Storage : RAM,  */
} RAMVariables_T;

extern RAMVariables_T RAMVariables __attribute__ ((section(".mc0_ram")));
extern void initRAMVariables(RAMVariables_T*);

/***** CONST Variables *************************************************/
#define CONSTVARIABLES

typedef struct {
  uint8_T rap_ds_ModelName[18];        /* Type : uint8_T, Storage : CONST,  */
  uint32_T rap_ds_BuildNumber;         /* Type : uint32_T, Storage : CONST,  */
  uint8_T rap_ds_MatlabVersion[13];    /* Type : uint8_T, Storage : CONST,  */
  uint8_T rap_ds_RaptorVersion[21];    /* Type : uint8_T, Storage : CONST,  */
  uint8_T rap_ds_SwIdTxt[22];          /* Type : uint8_T, Storage : CONST,  */
  uint8_T rap_ds_CalIdTxt[26];         /* Type : uint8_T, Storage : CONST,  */
  uint8_T rap_ds_BuildUID[21];         /* Type : uint8_T, Storage : CONST,  */
  uint16_T rap_ds_IdTableRev;          /* Type : uint16_T, Storage : CONST,  */
  uint32_T rap_ds_HardwareType;        /* Type : uint32_T, Storage : CONST,  */
  uint8_T rap_ds_DateStamp[20];        /* Type : uint8_T, Storage : CONST,  */
} CONSTVariables_T;

extern const CONSTVariables_T CONSTVariables;
extern void initCONSTVariables(const CONSTVariables_T*);
typedef enum {
  EE_INIT = 0,
  EE_LOADED_DEFAULTS = 1,
  EE_LOADED_DEFAULTS_AFTER_PROGRAMMING = 2,
  EE_LOADED_DEFAULTS_INCORRECT_CRC = 3,
  EE_LOADED_DEFAULTS_INCORRECT_EEID = 4,
  EE_LOADED_DEFAULTS_ERROR_READING = 5,
  EE_LOADED_DEFAULTS_FAILED_DRV_INIT = 6,
  EE_LOADED_SAVED_VALUES_AFTER_PROGRAMMING = 7,
  EE_LOADED_SAVED_VALUES = 8,
  EE_LOADED_BACKUP_VALUES = 9,
  EE_STORE_IN_PROGESS = 10,
  EE_STORE_FAILED = 11,
  EE_STORE_SUCCESS = 12,
} EE_STATES;

/***** EE Variables *************************************************/
#define EEVARIABLES

typedef struct {
  uint32_T EE_UniqID;
  uint32_T rap_ds_Wake_CAN5_SleepDelayTime;/* Type : uint32_T, Storage : CAL,  */
  uint32_T rap_ds_Wake_ETH_SleepDelayTime;/* Type : uint32_T, Storage : CAL,  */
  uint32_T rap_ds_Wake_LIN2_SleepDelayTime;/* Type : uint32_T, Storage : CAL,  */
  real32_T rap_ds_KeySwHiTimeThr;      /* Type : real32_T, Storage : CAL,  */
  real32_T rap_ds_KeySwLoTimeThr;      /* Type : real32_T, Storage : CAL,  */
  boolean_T rap_ds_SensorPowerEnable;  /* Type : boolean_T, Storage : CAL,  */
  uint32_T rap_ds_XCP1__XCP_BC_ID;     /* Type : uint32_T, Storage : CAL,  */
  uint32_T rap_ds_XCP1__XCP_RX_ID;     /* Type : uint32_T, Storage : CAL,  */
  uint32_T rap_ds_XCP1__XCP_TX_ID;     /* Type : uint32_T, Storage : CAL,  */
  uint16_T rap_ds_XCP1__XCP_Security;  /* Type : uint16_T, Storage : CAL,  */
  uint16 CRC;
} EEVariables_T;

extern const EEVariables_T EEVariables_DEFAULT;
extern EEVariables_T EEVariables_RAMShadow;
extern void App_EE_Store(void);
extern void App_EE_Defaults(void);

/***** #DEFINES Accessors *************************************************/
#define FgndTasksStopped_Data()        (RAMVariables.rap_ds_FgndTasksStopped)
#define FgndTasksStopped_Ptr()         (&(RAMVariables.rap_ds_FgndTasksStopped))
#define FgndTasksStopped_ELEMENTS()    (1 * 1)
#define Wake_CAN5_SleepDelayTime_Data() (EEVariables_RAMShadow.rap_ds_Wake_CAN5_SleepDelayTime)
#define Wake_CAN5_SleepDelayTime_Ptr() (&(EEVariables_RAMShadow.rap_ds_Wake_CAN5_SleepDelayTime))
#define Wake_CAN5_SleepDelayTime_ELEMENTS() (1 * 1)
#define Wake_ETH_SleepDelayTime_Data() (EEVariables_RAMShadow.rap_ds_Wake_ETH_SleepDelayTime)
#define Wake_ETH_SleepDelayTime_Ptr()  (&(EEVariables_RAMShadow.rap_ds_Wake_ETH_SleepDelayTime))
#define Wake_ETH_SleepDelayTime_ELEMENTS() (1 * 1)
#define Wake_LIN2_SleepDelayTime_Data() (EEVariables_RAMShadow.rap_ds_Wake_LIN2_SleepDelayTime)
#define Wake_LIN2_SleepDelayTime_Ptr() (&(EEVariables_RAMShadow.rap_ds_Wake_LIN2_SleepDelayTime))
#define Wake_LIN2_SleepDelayTime_ELEMENTS() (1 * 1)
#define KeySwHiTimeThr_Data()          (EEVariables_RAMShadow.rap_ds_KeySwHiTimeThr)
#define KeySwHiTimeThr_Ptr()           (&(EEVariables_RAMShadow.rap_ds_KeySwHiTimeThr))
#define KeySwHiTimeThr_ELEMENTS()      (1 * 1)
#define KeySwLoTimeThr_Data()          (EEVariables_RAMShadow.rap_ds_KeySwLoTimeThr)
#define KeySwLoTimeThr_Ptr()           (&(EEVariables_RAMShadow.rap_ds_KeySwLoTimeThr))
#define KeySwLoTimeThr_ELEMENTS()      (1 * 1)
#define CANWakeIndicator_Data()        (RAMVariables.rap_ds_CANWakeIndicator)
#define CANWakeIndicator_Ptr()         (&(RAMVariables.rap_ds_CANWakeIndicator))
#define CANWakeIndicator_ELEMENTS()    (1 * 1)
#define EthWakeIndicator_Data()        (RAMVariables.rap_ds_EthWakeIndicator)
#define EthWakeIndicator_Ptr()         (&(RAMVariables.rap_ds_EthWakeIndicator))
#define EthWakeIndicator_ELEMENTS()    (1 * 1)
#define EthLinkStatus_Data()           (RAMVariables.rap_ds_EthLinkStatus)
#define EthLinkStatus_Ptr()            (&(RAMVariables.rap_ds_EthLinkStatus))
#define EthLinkStatus_ELEMENTS()       (1 * 1)
#define LINWakeIndicator_Data()        (RAMVariables.rap_ds_LINWakeIndicator)
#define LINWakeIndicator_Ptr()         (&(RAMVariables.rap_ds_LINWakeIndicator))
#define LINWakeIndicator_ELEMENTS()    (1 * 1)
#define Wake_CAN5_RxCount_Data()       (RAMVariables.rap_ds_Wake_CAN5_RxCount)
#define Wake_CAN5_RxCount_Ptr()        (&(RAMVariables.rap_ds_Wake_CAN5_RxCount))
#define Wake_CAN5_RxCount_ELEMENTS()   (1 * 1)
#define Wake_CAN5_SleepDelayTTmr_Data() (RAMVariables.rap_ds_Wake_CAN5_SleepDelayTTmr)
#define Wake_CAN5_SleepDelayTTmr_Ptr() (&(RAMVariables.rap_ds_Wake_CAN5_SleepDelayTTmr))
#define Wake_CAN5_SleepDelayTTmr_ELEMENTS() (1 * 1)
#define Wake_ETH_SleepDelayTTmr_Data() (RAMVariables.rap_ds_Wake_ETH_SleepDelayTTmr)
#define Wake_ETH_SleepDelayTTmr_Ptr()  (&(RAMVariables.rap_ds_Wake_ETH_SleepDelayTTmr))
#define Wake_ETH_SleepDelayTTmr_ELEMENTS() (1 * 1)
#define Wake_LIN2_SleepDelayTTmr_Data() (RAMVariables.rap_ds_Wake_LIN2_SleepDelayTTmr)
#define Wake_LIN2_SleepDelayTTmr_Ptr() (&(RAMVariables.rap_ds_Wake_LIN2_SleepDelayTTmr))
#define Wake_LIN2_SleepDelayTTmr_ELEMENTS() (1 * 1)
#define KeySw_Bgnd_Data()              (RAMVariables.rap_ds_KeySw_Bgnd)
#define KeySw_Bgnd_Ptr()               (&(RAMVariables.rap_ds_KeySw_Bgnd))
#define KeySw_Bgnd_ELEMENTS()          (1 * 1)
#define KeepModuleOn_Data()            (RAMVariables.rap_ds_KeepModuleOn)
#define KeepModuleOn_Ptr()             (&(RAMVariables.rap_ds_KeepModuleOn))
#define KeepModuleOn_ELEMENTS()        (1 * 1)
#define MPRD_EN_Data()                 (RAMVariables.rap_ds_MPRD_EN)
#define MPRD_EN_Ptr()                  (&(RAMVariables.rap_ds_MPRD_EN))
#define MPRD_EN_ELEMENTS()             (1 * 1)
#define Wake_Source_Data()             (RAMVariables.rap_ds_Wake_Source)
#define Wake_Source_Ptr()              (&(RAMVariables.rap_ds_Wake_Source))
#define Wake_Source_ELEMENTS()         (1 * 1)
#define SensorPowerEnable_Data()       (EEVariables_RAMShadow.rap_ds_SensorPowerEnable)
#define SensorPowerEnable_Ptr()        (&(EEVariables_RAMShadow.rap_ds_SensorPowerEnable))
#define SensorPowerEnable_ELEMENTS()   (1 * 1)
#define Counter_Data()                 (RAMVariables.rap_ds_Counter)
#define Counter_Ptr()                  (&(RAMVariables.rap_ds_Counter))
#define Counter_ELEMENTS()             (1 * 1)
#define XCP1__XCP_BC_ID_Data()         (EEVariables_RAMShadow.rap_ds_XCP1__XCP_BC_ID)
#define XCP1__XCP_BC_ID_Ptr()          (&(EEVariables_RAMShadow.rap_ds_XCP1__XCP_BC_ID))
#define XCP1__XCP_BC_ID_ELEMENTS()     (1 * 1)
#define XCP1__XCP_RX_ID_Data()         (EEVariables_RAMShadow.rap_ds_XCP1__XCP_RX_ID)
#define XCP1__XCP_RX_ID_Ptr()          (&(EEVariables_RAMShadow.rap_ds_XCP1__XCP_RX_ID))
#define XCP1__XCP_RX_ID_ELEMENTS()     (1 * 1)
#define XCP1__XCP_TX_ID_Data()         (EEVariables_RAMShadow.rap_ds_XCP1__XCP_TX_ID)
#define XCP1__XCP_TX_ID_Ptr()          (&(EEVariables_RAMShadow.rap_ds_XCP1__XCP_TX_ID))
#define XCP1__XCP_TX_ID_ELEMENTS()     (1 * 1)
#define ModelName_Data()               (CONSTVariables.rap_ds_ModelName)
#define ModelName_Ptr()                (&(CONSTVariables.rap_ds_ModelName))
#define ModelName_ELEMENTS()           (1 * 18)
#define BuildNumber_Data()             (CONSTVariables.rap_ds_BuildNumber)
#define BuildNumber_Ptr()              (&(CONSTVariables.rap_ds_BuildNumber))
#define BuildNumber_ELEMENTS()         (1 * 1)
#define MatlabVersion_Data()           (CONSTVariables.rap_ds_MatlabVersion)
#define MatlabVersion_Ptr()            (&(CONSTVariables.rap_ds_MatlabVersion))
#define MatlabVersion_ELEMENTS()       (1 * 13)
#define RaptorVersion_Data()           (CONSTVariables.rap_ds_RaptorVersion)
#define RaptorVersion_Ptr()            (&(CONSTVariables.rap_ds_RaptorVersion))
#define RaptorVersion_ELEMENTS()       (1 * 21)
#define SwIdTxt_Data()                 (CONSTVariables.rap_ds_SwIdTxt)
#define SwIdTxt_Ptr()                  (&(CONSTVariables.rap_ds_SwIdTxt))
#define SwIdTxt_ELEMENTS()             (1 * 22)
#define CalIdTxt_Data()                (CONSTVariables.rap_ds_CalIdTxt)
#define CalIdTxt_Ptr()                 (&(CONSTVariables.rap_ds_CalIdTxt))
#define CalIdTxt_ELEMENTS()            (1 * 26)
#define BuildUID_Data()                (CONSTVariables.rap_ds_BuildUID)
#define BuildUID_Ptr()                 (&(CONSTVariables.rap_ds_BuildUID))
#define BuildUID_ELEMENTS()            (1 * 21)
#define IdTableRev_Data()              (CONSTVariables.rap_ds_IdTableRev)
#define IdTableRev_Ptr()               (&(CONSTVariables.rap_ds_IdTableRev))
#define IdTableRev_ELEMENTS()          (1 * 1)
#define HardwareType_Data()            (CONSTVariables.rap_ds_HardwareType)
#define HardwareType_Ptr()             (&(CONSTVariables.rap_ds_HardwareType))
#define HardwareType_ELEMENTS()        (1 * 1)
#define EcuAddr_RAM_Data()             (RAMVariables.rap_ds_EcuAddr_RAM)
#define EcuAddr_RAM_Ptr()              (&(RAMVariables.rap_ds_EcuAddr_RAM))
#define EcuAddr_RAM_ELEMENTS()         (1 * 1)
#define UDSServerAddr_RAM_Data()       (RAMVariables.rap_ds_UDSServerAddr_RAM)
#define UDSServerAddr_RAM_Ptr()        (&(RAMVariables.rap_ds_UDSServerAddr_RAM))
#define UDSServerAddr_RAM_ELEMENTS()   (1 * 1)
#define UDSClientAddr_RAM_Data()       (RAMVariables.rap_ds_UDSClientAddr_RAM)
#define UDSClientAddr_RAM_Ptr()        (&(RAMVariables.rap_ds_UDSClientAddr_RAM))
#define UDSClientAddr_RAM_ELEMENTS()   (1 * 1)
#define DateStamp_Data()               (CONSTVariables.rap_ds_DateStamp)
#define DateStamp_Ptr()                (&(CONSTVariables.rap_ds_DateStamp))
#define DateStamp_ELEMENTS()           (1 * 20)
#define XCP1__XCP_Security_Data()      (EEVariables_RAMShadow.rap_ds_XCP1__XCP_Security)
#define XCP1__XCP_Security_Ptr()       (&(EEVariables_RAMShadow.rap_ds_XCP1__XCP_Security))
#define XCP1__XCP_Security_ELEMENTS()  (1 * 1)
#define EEPROM_State_Data()            (RAMVariables.rap_ds_EEPROM_State)
#define EEPROM_State_Ptr()             (&(RAMVariables.rap_ds_EEPROM_State))
#define EEPROM_State_ELEMENTS()        (1 * 1)
#define NonVolatileCRC_Data()          (EEVariables_RAMShadow.CRC)
#define NonVolatileCRC_Ptr()           (&(EEVariables_RAMShadow.CRC))

/***** CAL Locator ********************************************************/
#define CALLOC_START                   ((void*)Wake_CAN5_SleepDelayTime_Ptr())
#define CALLOC_LENGTH                  ( sizeof(Wake_CAN5_SleepDelayTime_Data()) + sizeof(Wake_ETH_SleepDelayTime_Data()) + sizeof(Wake_LIN2_SleepDelayTime_Data()) + sizeof(KeySwHiTimeThr_Data()) + sizeof(KeySwLoTimeThr_Data()) + sizeof(SensorPowerEnable_Data()) + sizeof(XCP1__XCP_BC_ID_Data()) + sizeof(XCP1__XCP_RX_ID_Data()) + sizeof(XCP1__XCP_TX_ID_Data()) + sizeof(XCP1__XCP_Security_Data()) + 0)
#endif
